#!/usr/bin/python3
import shutil
import argparse
import os
import subprocess
import re
import json


if __name__ == '__main__':
    project_collection_folder = "PycharmProjects"
    parser = argparse.ArgumentParser()
    parser.add_argument("project_name")
    args = parser.parse_args()
    project_name = args.project_name
    home_folder = os.environ.get("HOME")
    dest = os.path.join(home_folder, project_collection_folder, project_name)

    def create_project():
        if not os.path.exists(dest):
            os.mkdir(dest)

        # set up the list of files we want to move to the target folder
        file_list = "deployvarsdev.json playbook.yml provisiondev.sh README.md".split()
        for f in file_list:
            shutil.copy(f, dest)

        shutil.copytree("roles", os.path.join(dest, "roles"))
        move_command = ["mv"]
        move_command.append(os.path.join(dest, "roles", "myapp"))
        move_command.append(os.path.join(dest, "roles", project_name))
        res = subprocess.call(move_command)

    create_project()

    # set up the playbook with the right role name.
    playbook_path = os.path.join(dest, "playbook.yml")
    with open(playbook_path, "r+") as f:
        raw_data = f.read()
        replacement_data = re.sub(r"myapp", project_name, raw_data)
        f.seek(0)
        f.write(replacement_data)


    # give the json deployment file sensible defaults
    json_file_path = os.path.join(dest, "deployvarsdev.json")

    with open(json_file_path, "rt") as f:
        deploy_data = json.load(f)

    deploy_data["domain"] = "{}.com".format(project_name)
    deploy_data["appname"] = project_name
    with open(json_file_path, "wt") as f:
        json.dump(deploy_data, f, indent=4)
